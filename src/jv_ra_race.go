package jvdata
// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
	"golang.org/x/text/encoding/japanese"
	"strconv"
)

type JvRaRace struct {
	Record []*JvRaRace_Record
	_io *kaitai.Stream
	_root *JvRaRace
	_parent interface{}
	_raw_Record [][]byte
}
func NewJvRaRace() *JvRaRace {
	return &JvRaRace{
	}
}

func (this *JvRaRace) Read(io *kaitai.Stream, parent interface{}, root *JvRaRace) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 1;; i++ {
		tmp1, err := this._io.EOF()
		if err != nil {
			return err
		}
		if tmp1 {
			break
		}
		tmp2, err := this._io.ReadBytesFull()
		if err != nil {
			return err
		}
		tmp2 = kaitai.BytesTerminate(tmp2, 10, false)
		this._raw_Record = append(this._raw_Record, tmp2)
		_io__raw_Record := kaitai.NewStream(bytes.NewReader(this._raw_Record[len(this._raw_Record) - 1]))
		tmp3 := NewJvRaRace_Record()
		err = tmp3.Read(_io__raw_Record, this, this._root)
		if err != nil {
			return err
		}
		this.Record = append(this.Record, tmp3)
	}
	return err
}
type JvRaRace_Body struct {
	YoubiCode string
	TokuNum string
	Hondai string
	Fukudai string
	Kakko string
	HondaiEng string
	FukudaiEng string
	KakkoEng string
	Ryakusyo10 string
	Ryakusyo6 string
	Ryakusyo3 string
	Kubun string
	Nkai string
	GradeCode string
	GradeCodeBefore string
	SyubetuCode string
	KigoCode string
	JyuryoCode string
	JyokenCode2 string
	JyokenCode3 string
	JyokenCode4 string
	JyokenCode5YearsOldAndOver string
	JyokenCodeYoungest string
	JyokenName string
	KyoriStr string
	KyoriBeforeStr string
	TrackCode string
	TrackCodeBefore string
	CourseKubunCode string
	CourseKubunCodeBefore string
	Honsyokin []string
	HonsyokinBefore []string
	Fukasyokin []string
	FukasyokinBefore []string
	HassoTime string
	HassoTimeBefore string
	TorokuTosu string
	SyussoTosu string
	NyusenTosu string
	TenkoCode string
	SibaBabaCode string
	DirtBabaCode string
	Result *JvRaRace_Result
	RecordUpKubun string
	_io *kaitai.Stream
	_root *JvRaRace
	_parent *JvRaRace_Record
	_f_kyori bool
	kyori int
	_f_kyoriBefore bool
	kyoriBefore int
}
func NewJvRaRace_Body() *JvRaRace_Body {
	return &JvRaRace_Body{
	}
}

func (this *JvRaRace_Body) Read(io *kaitai.Stream, parent *JvRaRace_Record, root *JvRaRace) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp4, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp4 = tmp4
	tmp5, err := kaitai.BytesToStr(tmp4, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.YoubiCode = tmp5
	tmp6, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp6 = tmp6
	tmp7, err := kaitai.BytesToStr(tmp6, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.TokuNum = tmp7
	tmp8, err := this._io.ReadBytes(int(60))
	if err != nil {
		return err
	}
	tmp8 = tmp8
	tmp9, err := kaitai.BytesToStr(tmp8, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Hondai = tmp9
	tmp10, err := this._io.ReadBytes(int(60))
	if err != nil {
		return err
	}
	tmp10 = tmp10
	tmp11, err := kaitai.BytesToStr(tmp10, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Fukudai = tmp11
	tmp12, err := this._io.ReadBytes(int(60))
	if err != nil {
		return err
	}
	tmp12 = tmp12
	tmp13, err := kaitai.BytesToStr(tmp12, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Kakko = tmp13
	tmp14, err := this._io.ReadBytes(int(120))
	if err != nil {
		return err
	}
	tmp14 = tmp14
	tmp15, err := kaitai.BytesToStr(tmp14, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.HondaiEng = tmp15
	tmp16, err := this._io.ReadBytes(int(120))
	if err != nil {
		return err
	}
	tmp16 = tmp16
	tmp17, err := kaitai.BytesToStr(tmp16, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.FukudaiEng = tmp17
	tmp18, err := this._io.ReadBytes(int(120))
	if err != nil {
		return err
	}
	tmp18 = tmp18
	tmp19, err := kaitai.BytesToStr(tmp18, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.KakkoEng = tmp19
	tmp20, err := this._io.ReadBytes(int(20))
	if err != nil {
		return err
	}
	tmp20 = tmp20
	tmp21, err := kaitai.BytesToStr(tmp20, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Ryakusyo10 = tmp21
	tmp22, err := this._io.ReadBytes(int(12))
	if err != nil {
		return err
	}
	tmp22 = tmp22
	tmp23, err := kaitai.BytesToStr(tmp22, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Ryakusyo6 = tmp23
	tmp24, err := this._io.ReadBytes(int(6))
	if err != nil {
		return err
	}
	tmp24 = tmp24
	tmp25, err := kaitai.BytesToStr(tmp24, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Ryakusyo3 = tmp25
	tmp26, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp26 = tmp26
	tmp27, err := kaitai.BytesToStr(tmp26, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Kubun = tmp27
	tmp28, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp28 = tmp28
	tmp29, err := kaitai.BytesToStr(tmp28, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Nkai = tmp29
	tmp30, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp30 = tmp30
	tmp31, err := kaitai.BytesToStr(tmp30, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.GradeCode = tmp31
	tmp32, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp32 = tmp32
	tmp33, err := kaitai.BytesToStr(tmp32, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.GradeCodeBefore = tmp33
	tmp34, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp34 = tmp34
	tmp35, err := kaitai.BytesToStr(tmp34, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.SyubetuCode = tmp35
	tmp36, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp36 = tmp36
	tmp37, err := kaitai.BytesToStr(tmp36, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.KigoCode = tmp37
	tmp38, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp38 = tmp38
	tmp39, err := kaitai.BytesToStr(tmp38, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.JyuryoCode = tmp39
	tmp40, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp40 = tmp40
	tmp41, err := kaitai.BytesToStr(tmp40, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.JyokenCode2 = tmp41
	tmp42, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp42 = tmp42
	tmp43, err := kaitai.BytesToStr(tmp42, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.JyokenCode3 = tmp43
	tmp44, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp44 = tmp44
	tmp45, err := kaitai.BytesToStr(tmp44, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.JyokenCode4 = tmp45
	tmp46, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp46 = tmp46
	tmp47, err := kaitai.BytesToStr(tmp46, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.JyokenCode5YearsOldAndOver = tmp47
	tmp48, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp48 = tmp48
	tmp49, err := kaitai.BytesToStr(tmp48, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.JyokenCodeYoungest = tmp49
	tmp50, err := this._io.ReadBytes(int(60))
	if err != nil {
		return err
	}
	tmp50 = tmp50
	tmp51, err := kaitai.BytesToStr(tmp50, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.JyokenName = tmp51
	tmp52, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp52 = tmp52
	tmp53, err := kaitai.BytesToStr(tmp52, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.KyoriStr = tmp53
	tmp54, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp54 = tmp54
	tmp55, err := kaitai.BytesToStr(tmp54, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.KyoriBeforeStr = tmp55
	tmp56, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp56 = tmp56
	tmp57, err := kaitai.BytesToStr(tmp56, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.TrackCode = tmp57
	tmp58, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp58 = tmp58
	tmp59, err := kaitai.BytesToStr(tmp58, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.TrackCodeBefore = tmp59
	tmp60, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp60 = tmp60
	tmp61, err := kaitai.BytesToStr(tmp60, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.CourseKubunCode = tmp61
	tmp62, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp62 = tmp62
	tmp63, err := kaitai.BytesToStr(tmp62, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.CourseKubunCodeBefore = tmp63
	for i := 0; i < int(7); i++ {
		_ = i
		tmp64, err := this._io.ReadBytes(int(8))
		if err != nil {
			return err
		}
		tmp64 = tmp64
		tmp65, err := kaitai.BytesToStr(tmp64, japanese.ShiftJIS.NewDecoder())
		if err != nil {
			return err
		}
		this.Honsyokin = append(this.Honsyokin, tmp65)
	}
	for i := 0; i < int(5); i++ {
		_ = i
		tmp66, err := this._io.ReadBytes(int(8))
		if err != nil {
			return err
		}
		tmp66 = tmp66
		tmp67, err := kaitai.BytesToStr(tmp66, japanese.ShiftJIS.NewDecoder())
		if err != nil {
			return err
		}
		this.HonsyokinBefore = append(this.HonsyokinBefore, tmp67)
	}
	for i := 0; i < int(5); i++ {
		_ = i
		tmp68, err := this._io.ReadBytes(int(8))
		if err != nil {
			return err
		}
		tmp68 = tmp68
		tmp69, err := kaitai.BytesToStr(tmp68, japanese.ShiftJIS.NewDecoder())
		if err != nil {
			return err
		}
		this.Fukasyokin = append(this.Fukasyokin, tmp69)
	}
	for i := 0; i < int(3); i++ {
		_ = i
		tmp70, err := this._io.ReadBytes(int(8))
		if err != nil {
			return err
		}
		tmp70 = tmp70
		tmp71, err := kaitai.BytesToStr(tmp70, japanese.ShiftJIS.NewDecoder())
		if err != nil {
			return err
		}
		this.FukasyokinBefore = append(this.FukasyokinBefore, tmp71)
	}
	tmp72, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp72 = tmp72
	tmp73, err := kaitai.BytesToStr(tmp72, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.HassoTime = tmp73
	tmp74, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp74 = tmp74
	tmp75, err := kaitai.BytesToStr(tmp74, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.HassoTimeBefore = tmp75
	tmp76, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp76 = tmp76
	tmp77, err := kaitai.BytesToStr(tmp76, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.TorokuTosu = tmp77
	tmp78, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp78 = tmp78
	tmp79, err := kaitai.BytesToStr(tmp78, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.SyussoTosu = tmp79
	tmp80, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp80 = tmp80
	tmp81, err := kaitai.BytesToStr(tmp80, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.NyusenTosu = tmp81
	tmp82, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp82 = tmp82
	tmp83, err := kaitai.BytesToStr(tmp82, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.TenkoCode = tmp83
	tmp84, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp84 = tmp84
	tmp85, err := kaitai.BytesToStr(tmp84, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.SibaBabaCode = tmp85
	tmp86, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp86 = tmp86
	tmp87, err := kaitai.BytesToStr(tmp86, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.DirtBabaCode = tmp87
	tmp88 := NewJvRaRace_Result()
	err = tmp88.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Result = tmp88
	tmp89, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp89 = tmp89
	tmp90, err := kaitai.BytesToStr(tmp89, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.RecordUpKubun = tmp90
	return err
}
func (this *JvRaRace_Body) Kyori() (v int, err error) {
	if (this._f_kyori) {
		return this.kyori, nil
	}
	tmp91, err := strconv.ParseInt(this.KyoriStr, 10, 0)
	if err != nil {
		return 0, err
	}
	this.kyori = int(tmp91)
	this._f_kyori = true
	return this.kyori, nil
}
func (this *JvRaRace_Body) KyoriBefore() (v int, err error) {
	if (this._f_kyoriBefore) {
		return this.kyoriBefore, nil
	}
	tmp92, err := strconv.ParseInt(this.KyoriBeforeStr, 10, 0)
	if err != nil {
		return 0, err
	}
	this.kyoriBefore = int(tmp92)
	this._f_kyoriBefore = true
	return this.kyoriBefore, nil
}
type JvRaRace_RaceId struct {
	Year string
	Month string
	Day string
	JyoCode string
	Kaiji string
	Nichiji string
	RaceNum string
	_io *kaitai.Stream
	_root *JvRaRace
	_parent *JvRaRace_Record
	_f_id bool
	id string
}
func NewJvRaRace_RaceId() *JvRaRace_RaceId {
	return &JvRaRace_RaceId{
	}
}

func (this *JvRaRace_RaceId) Read(io *kaitai.Stream, parent *JvRaRace_Record, root *JvRaRace) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp93, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp93 = tmp93
	tmp94, err := kaitai.BytesToStr(tmp93, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Year = tmp94
	tmp95, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp95 = tmp95
	tmp96, err := kaitai.BytesToStr(tmp95, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Month = tmp96
	tmp97, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp97 = tmp97
	tmp98, err := kaitai.BytesToStr(tmp97, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Day = tmp98
	tmp99, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp99 = tmp99
	tmp100, err := kaitai.BytesToStr(tmp99, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.JyoCode = tmp100
	tmp101, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp101 = tmp101
	tmp102, err := kaitai.BytesToStr(tmp101, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Kaiji = tmp102
	tmp103, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp103 = tmp103
	tmp104, err := kaitai.BytesToStr(tmp103, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Nichiji = tmp104
	tmp105, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp105 = tmp105
	tmp106, err := kaitai.BytesToStr(tmp105, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.RaceNum = tmp106
	return err
}
func (this *JvRaRace_RaceId) Id() (v string, err error) {
	if (this._f_id) {
		return this.id, nil
	}
	this.id = string(this.Year + this.Month + this.Day + this.JyoCode + this.Kaiji + this.Nichiji + this.RaceNum)
	this._f_id = true
	return this.id, nil
}
type JvRaRace_LapTime struct {
	I int32
	_io *kaitai.Stream
	_root *JvRaRace
	_parent *JvRaRace_Result
	_f_value bool
	value int
}
func NewJvRaRace_LapTime(i int32) *JvRaRace_LapTime {
	return &JvRaRace_LapTime{
		I: i,
	}
}

func (this *JvRaRace_LapTime) Read(io *kaitai.Stream, parent *JvRaRace_Result, root *JvRaRace) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}
func (this *JvRaRace_LapTime) Value() (v int, err error) {
	if (this._f_value) {
		return this.value, nil
	}
	tmp107, err := strconv.ParseInt(this._parent.LapTimeStrs[this.I], 10, 0)
	if err != nil {
		return 0, err
	}
	this.value = int(tmp107)
	this._f_value = true
	return this.value, nil
}
type JvRaRace_Result struct {
	LapTimeStrs []string
	SyogaiMileTime string
	HaronTimeS3Str string
	HaronTimeS4Str string
	HaronTimeL3Str string
	HaronTimeL4Str string
	Corner1 string
	Syukaisu1 string
	Jyuni1 string
	Corner2 string
	Syukaisu2 string
	Jyuni2 string
	Corner3 string
	Syukaisu3 string
	Jyuni3 string
	Corner4Str string
	Syukaisu4Str string
	Jyuni4 string
	_io *kaitai.Stream
	_root *JvRaRace
	_parent *JvRaRace_Body
	_f_haronTimeS4 bool
	haronTimeS4 int
	_f_lapTimes bool
	lapTimes []*JvRaRace_LapTime
	_f_haronTimeS3 bool
	haronTimeS3 int
	_f_haronTimeL3 bool
	haronTimeL3 int
	_f_haronTimeL4 bool
	haronTimeL4 int
}
func NewJvRaRace_Result() *JvRaRace_Result {
	return &JvRaRace_Result{
	}
}

func (this *JvRaRace_Result) Read(io *kaitai.Stream, parent *JvRaRace_Body, root *JvRaRace) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0; i < int(25); i++ {
		_ = i
		tmp108, err := this._io.ReadBytes(int(3))
		if err != nil {
			return err
		}
		tmp108 = tmp108
		tmp109, err := kaitai.BytesToStr(tmp108, japanese.ShiftJIS.NewDecoder())
		if err != nil {
			return err
		}
		this.LapTimeStrs = append(this.LapTimeStrs, tmp109)
	}
	tmp110, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp110 = tmp110
	tmp111, err := kaitai.BytesToStr(tmp110, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.SyogaiMileTime = tmp111
	tmp112, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp112 = tmp112
	tmp113, err := kaitai.BytesToStr(tmp112, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.HaronTimeS3Str = tmp113
	tmp114, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp114 = tmp114
	tmp115, err := kaitai.BytesToStr(tmp114, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.HaronTimeS4Str = tmp115
	tmp116, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp116 = tmp116
	tmp117, err := kaitai.BytesToStr(tmp116, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.HaronTimeL3Str = tmp117
	tmp118, err := this._io.ReadBytes(int(3))
	if err != nil {
		return err
	}
	tmp118 = tmp118
	tmp119, err := kaitai.BytesToStr(tmp118, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.HaronTimeL4Str = tmp119
	tmp120, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp120 = tmp120
	tmp121, err := kaitai.BytesToStr(tmp120, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Corner1 = tmp121
	tmp122, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp122 = tmp122
	tmp123, err := kaitai.BytesToStr(tmp122, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Syukaisu1 = tmp123
	tmp124, err := this._io.ReadBytes(int(70))
	if err != nil {
		return err
	}
	tmp124 = tmp124
	tmp125, err := kaitai.BytesToStr(tmp124, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Jyuni1 = tmp125
	tmp126, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp126 = tmp126
	tmp127, err := kaitai.BytesToStr(tmp126, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Corner2 = tmp127
	tmp128, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp128 = tmp128
	tmp129, err := kaitai.BytesToStr(tmp128, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Syukaisu2 = tmp129
	tmp130, err := this._io.ReadBytes(int(70))
	if err != nil {
		return err
	}
	tmp130 = tmp130
	tmp131, err := kaitai.BytesToStr(tmp130, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Jyuni2 = tmp131
	tmp132, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp132 = tmp132
	tmp133, err := kaitai.BytesToStr(tmp132, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Corner3 = tmp133
	tmp134, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp134 = tmp134
	tmp135, err := kaitai.BytesToStr(tmp134, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Syukaisu3 = tmp135
	tmp136, err := this._io.ReadBytes(int(70))
	if err != nil {
		return err
	}
	tmp136 = tmp136
	tmp137, err := kaitai.BytesToStr(tmp136, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Jyuni3 = tmp137
	tmp138, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp138 = tmp138
	tmp139, err := kaitai.BytesToStr(tmp138, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Corner4Str = tmp139
	tmp140, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp140 = tmp140
	tmp141, err := kaitai.BytesToStr(tmp140, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Syukaisu4Str = tmp141
	tmp142, err := this._io.ReadBytes(int(70))
	if err != nil {
		return err
	}
	tmp142 = tmp142
	tmp143, err := kaitai.BytesToStr(tmp142, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Jyuni4 = tmp143
	return err
}
func (this *JvRaRace_Result) HaronTimeS4() (v int, err error) {
	if (this._f_haronTimeS4) {
		return this.haronTimeS4, nil
	}
	tmp144, err := strconv.ParseInt(this.HaronTimeS4Str, 10, 0)
	if err != nil {
		return 0, err
	}
	this.haronTimeS4 = int(tmp144)
	this._f_haronTimeS4 = true
	return this.haronTimeS4, nil
}
func (this *JvRaRace_Result) LapTimes() (v []*JvRaRace_LapTime, err error) {
	if (this._f_lapTimes) {
		return this.lapTimes, nil
	}
	for i := 0; i < int(25); i++ {
		_ = i
		tmp145 := NewJvRaRace_LapTime(int32(i))
		err = tmp145.Read(this._io, this, this._root)
		if err != nil {
			return nil, err
		}
		this.lapTimes = append(this.lapTimes, tmp145)
	}
	this._f_lapTimes = true
	this._f_lapTimes = true
	return this.lapTimes, nil
}
func (this *JvRaRace_Result) HaronTimeS3() (v int, err error) {
	if (this._f_haronTimeS3) {
		return this.haronTimeS3, nil
	}
	tmp146, err := strconv.ParseInt(this.HaronTimeS3Str, 10, 0)
	if err != nil {
		return 0, err
	}
	this.haronTimeS3 = int(tmp146)
	this._f_haronTimeS3 = true
	return this.haronTimeS3, nil
}
func (this *JvRaRace_Result) HaronTimeL3() (v int, err error) {
	if (this._f_haronTimeL3) {
		return this.haronTimeL3, nil
	}
	tmp147, err := strconv.ParseInt(this.HaronTimeL3Str, 10, 0)
	if err != nil {
		return 0, err
	}
	this.haronTimeL3 = int(tmp147)
	this._f_haronTimeL3 = true
	return this.haronTimeL3, nil
}
func (this *JvRaRace_Result) HaronTimeL4() (v int, err error) {
	if (this._f_haronTimeL4) {
		return this.haronTimeL4, nil
	}
	tmp148, err := strconv.ParseInt(this.HaronTimeL4Str, 10, 0)
	if err != nil {
		return 0, err
	}
	this.haronTimeL4 = int(tmp148)
	this._f_haronTimeL4 = true
	return this.haronTimeL4, nil
}
type JvRaRace_CreatedAt struct {
	Year string
	Month string
	Day string
	_io *kaitai.Stream
	_root *JvRaRace
	_parent *JvRaRace_Record
}
func NewJvRaRace_CreatedAt() *JvRaRace_CreatedAt {
	return &JvRaRace_CreatedAt{
	}
}

func (this *JvRaRace_CreatedAt) Read(io *kaitai.Stream, parent *JvRaRace_Record, root *JvRaRace) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp149, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp149 = tmp149
	tmp150, err := kaitai.BytesToStr(tmp149, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Year = tmp150
	tmp151, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp151 = tmp151
	tmp152, err := kaitai.BytesToStr(tmp151, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Month = tmp152
	tmp153, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp153 = tmp153
	tmp154, err := kaitai.BytesToStr(tmp153, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.Day = tmp154
	return err
}
type JvRaRace_Record struct {
	RecordSpec string
	DataKubun string
	CreatedAt *JvRaRace_CreatedAt
	RaceId *JvRaRace_RaceId
	Body *JvRaRace_Body
	_io *kaitai.Stream
	_root *JvRaRace
	_parent *JvRaRace
}
func NewJvRaRace_Record() *JvRaRace_Record {
	return &JvRaRace_Record{
	}
}

func (this *JvRaRace_Record) Read(io *kaitai.Stream, parent *JvRaRace, root *JvRaRace) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp155, err := this._io.ReadBytes(int(2))
	if err != nil {
		return err
	}
	tmp155 = tmp155
	tmp156, err := kaitai.BytesToStr(tmp155, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.RecordSpec = tmp156
	tmp157, err := this._io.ReadBytes(int(1))
	if err != nil {
		return err
	}
	tmp157 = tmp157
	tmp158, err := kaitai.BytesToStr(tmp157, japanese.ShiftJIS.NewDecoder())
	if err != nil {
		return err
	}
	this.DataKubun = tmp158
	tmp159 := NewJvRaRace_CreatedAt()
	err = tmp159.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.CreatedAt = tmp159
	tmp160 := NewJvRaRace_RaceId()
	err = tmp160.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.RaceId = tmp160
	tmp161 := NewJvRaRace_Body()
	err = tmp161.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Body = tmp161
	return err
}
